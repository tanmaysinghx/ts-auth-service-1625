name: CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout source code
      - name: Checkout source
        uses: actions/checkout@v3

      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 3: Cache Node.js modules
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      # Step 4: Install dependencies and build the project
      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      # Step 5: Login to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t tanmaysinghx/ts-auth-service-1625:latest .

      # Step 7: Publish Docker image to Docker Hub
      - name: Push Docker image
        run: docker push tanmaysinghx/ts-auth-service-1625:latest

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCFkSM0GR+xBeTQV2nafwVSnGybYkJxsz6YYrJMS/5eLyRmi2bZ1QaTgrCdMp9aYf1NLk/r12nYwjGg7FhlpqD6sAfBfIhloCnDDecGHiU5yjeCIOgExfhvI/t/sFXbGF5xdOU4/NXhSybLd5iqKJpYGpW61sxQr2xk2NBC7l3N64TuRyxy7vOJBgJs09mLXtg0VXIWEWRTmVx66yR5e3kkqoN6FKC1WnZsxtXRoSMYldoNte/pPX4f2FAlrPvL/s+9/alGSDWRdyu0EW9Idq4I6eTu1kn9HdAt3QsbzxFV0gSv7EbQ6J+OnKffDMn9emov2hDCfzuY/2iy3XHhMvGh rsa-key-20241006
          port: 22
          script: |
            # Step 2: Pull latest Docker image from Docker Hub
            docker pull tanmaysinghx/ts-auth-service-1625:latest

            # Step 3: Stop and remove any existing container
            docker rm -f ts-auth-service-1625 || true

            # Step 4: Run the new container
            docker run -d -p 8080:8080 --name ts-auth-service-1625 tanmaysinghx/ts-auth-service-1625:latest
          debug: true # Optional: Set this to true for debugging output
